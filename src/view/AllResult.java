package view;

import dao.Result;
import dao.User;
import static dao.dbConnect.user;
import java.sql.*;
import dao.dbConnect;
import java.util.ArrayList;
import java.util.Vector;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author minh
 */
public class AllResult extends javax.swing.JFrame {

    int index = 0;
    private int userid;

    public AllResult() {
        initComponents();

        display_table();
    }

    AllResult(int userID) {
        initComponents();
        this.userid = userID;
        display_table();
    }

    public void display_table() {
        int CC;

        try {
            Connection con = dbConnect.Connection();
            Statement st = con.createStatement();
            String sql = " select * from vwUserResult";
            ResultSet rs = st.executeQuery(sql);

            ResultSetMetaData RSMD = rs.getMetaData();

            CC = RSMD.getColumnCount();

            DefaultTableModel DFT = (DefaultTableModel) jTable1.getModel();
            DFT.setRowCount(0);
            while (rs.next()) {
                Vector v2 = new Vector();
                for (int i = 1; i <= CC; i++) {
                    v2.add(rs.getInt("userid"));
                    v2.add(rs.getString("name"));
                    v2.add(rs.getInt("score"));
                    v2.add(rs.getString("duration"));
                    v2.add(rs.getString("date"));
                    v2.add(rs.getInt("level"));
                    v2.add(rs.getString("topic"));

                }
                DFT.addRow(v2);

            }
        } catch (Exception e) {
            System.err.println("ERROR" + e.getMessage());
        }
    }

    /**
     *
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        backBtn = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel3 = new javax.swing.JLabel();
        TextFilter = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jCheckBox1 = new javax.swing.JCheckBox();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(75, 75));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/all student result.png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 34, -1, -1));

        jLabel2.setFont(new java.awt.Font("PT Sans Caption", 1, 40)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("All Player Result");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(131, 42, -1, -1));

        backBtn.setBackground(new java.awt.Color(204, 204, 204));
        backBtn.setFont(new java.awt.Font("PT Sans Caption", 1, 18)); // NOI18N
        backBtn.setForeground(new java.awt.Color(0, 0, 0));
        backBtn.setText("Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });
        getContentPane().add(backBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(1113, 34, 110, 60));
        getContentPane().add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 112, 1183, 13));

        jLabel3.setFont(new java.awt.Font("PT Sans Caption", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/search.png"))); // NOI18N
        jLabel3.setText("Filter By Marks");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 153, 178, 39));

        TextFilter.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                TextFilterKeyReleased(evt);
            }
        });
        getContentPane().add(TextFilter, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 150, 150, 39));

        jTable1.setFont(new java.awt.Font("PT Sans Caption", 0, 12)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "UserID", "Name ", "Score", "Duration", "Date", "Level", "Topic"
            }
        ));
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(5).setResizable(false);
        }

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 219, 1196, 468));

        jCheckBox1.setFont(new java.awt.Font("PT Sans Caption", 1, 12)); // NOI18N
        jCheckBox1.setText("Top 10 ");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });
        getContentPane().add(jCheckBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 160, -1, -1));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/background3.png"))); // NOI18N
        jLabel4.setText("jLabel4");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1280, 720));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:

        User user = dao.UserDAO.getbyid(userid);

        this.dispose();
        new InfoUser(user).setVisible(true);

    }//GEN-LAST:event_backBtnActionPerformed

    private void TextFilterKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TextFilterKeyReleased
        // TODO add your handling code here:

        int marks;
        if (TextFilter.getText().isEmpty()) {
            display_table();
        } else {
            marks = Integer.parseInt(TextFilter.getText());

            int CC;

            try {
                Connection con = dbConnect.Connection();
                Statement st = con.createStatement();
                String sql = " select * from vwUserResult where score >= " + marks + "";
                ResultSet rs = st.executeQuery(sql);

                ResultSetMetaData RSMD = rs.getMetaData();

                CC = RSMD.getColumnCount();

                DefaultTableModel DFT = (DefaultTableModel) jTable1.getModel();
                DFT.setRowCount(0);
                while (rs.next()) {
                    Vector v2 = new Vector();
                    for (int i = 1; i <= CC; i++) {
                        v2.add(rs.getInt("userid"));
                        v2.add(rs.getString("name"));
                        v2.add(rs.getInt("score"));
                        v2.add(rs.getString("duration"));
                        v2.add(rs.getString("date"));
                        v2.add(rs.getInt("level"));
                        v2.add(rs.getString("topic"));

                    }
                    DFT.addRow(v2);

                }
            } catch (Exception e) {
                System.err.println("ERROR" + e.getMessage());
            }

        }
    }//GEN-LAST:event_TextFilterKeyReleased

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        // TODO add your handling code here:
        int CC;
        if (jCheckBox1.isSelected()) {
            try {
                Connection con = dbConnect.Connection();
                Statement st = con.createStatement();
                String sql = "SELECT TOP 10 * FROM vwUserResult ORDER BY score DESC;";
                ResultSet rs = st.executeQuery(sql);

                ResultSetMetaData RSMD = rs.getMetaData();

                CC = RSMD.getColumnCount();

                DefaultTableModel DFT = (DefaultTableModel) jTable1.getModel();
                DFT.setRowCount(0);
                while (rs.next()) {
                    Vector v2 = new Vector();
                    for (int i = 1; i <= CC; i++) {
                        v2.add(rs.getInt("userid"));
                        v2.add(rs.getString("name"));
                        v2.add(rs.getInt("score"));
                        v2.add(rs.getString("duration"));
                        v2.add(rs.getString("date"));
                        v2.add(rs.getInt("level"));
                        v2.add(rs.getString("topic"));

                    }
                    DFT.addRow(v2);
                }
            } catch (Exception e) {
                System.err.println("ERROR" + e.getMessage());
            }
        }else{
            display_table();
        }
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AllResult.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AllResult.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AllResult.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AllResult.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {

                new AllResult().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField TextFilter;
    private javax.swing.JButton backBtn;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
